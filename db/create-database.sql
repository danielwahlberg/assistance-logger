-- MySQL Script generated by MySQL Workbench
-- Thu Dec 24 22:30:36 2015
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema assistanceLogger
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema assistanceLogger
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `assistanceLogger` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `assistanceLogger` ;

-- -----------------------------------------------------
-- Table `assistanceLogger`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`patient` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(255) NULL COMMENT 'Hashed with SHA1',
  `role` ENUM('ASSISTANT','PATIENTADMIN','SYSTEMADMIN') NULL DEFAULT NULL,
  `token` VARCHAR(255) NULL DEFAULT NULL,
  `tokenValidThrough` DATETIME NULL DEFAULT NULL,
  `patient_id` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  INDEX `fk_user_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_user_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `assistanceLogger`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`assistant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`assistant` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  `user_id` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_assistant_user_idx` (`user_id` ASC),
  CONSTRAINT `fk_assistant_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `assistanceLogger`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`medicine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`medicine` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `isActive` TINYINT(1) NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`medicineDose`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`medicineDose` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `medicine_id` INT NOT NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  `dose` VARCHAR(10) NULL,
  `preferredTime` TIME NULL,
  `giveWhenNeeded` TINYINT(1) NULL DEFAULT 0 COMMENT 'Indicates whether a dose is to be given only when needed, and not always at the preferred time',
  `patient_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_medicineDose_medicine1_idx` (`medicine_id` ASC),
  INDEX `fk_medicineDose_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_medicineDose_medicine1`
    FOREIGN KEY (`medicine_id`)
    REFERENCES `assistanceLogger`.`medicine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medicineDose_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `assistanceLogger`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`medicineUsageLog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`medicineUsageLog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `medicineDose_id` INT NOT NULL,
  `assistant_id` INT NOT NULL,
  `medicineGiven` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_medicineUsageLog_medicineDose1_idx` (`medicineDose_id` ASC),
  INDEX `fk_medicineUsageLog_assistant1_idx` (`assistant_id` ASC),
  CONSTRAINT `fk_medicineUsageLog_medicineDose1`
    FOREIGN KEY (`medicineDose_id`)
    REFERENCES `assistanceLogger`.`medicineDose` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medicineUsageLog_assistant1`
    FOREIGN KEY (`assistant_id`)
    REFERENCES `assistanceLogger`.`assistant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`foodType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`foodType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `unit` VARCHAR(15) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`feedingLog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`feedingLog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `amount` INT NULL,
  `foodType_id` INT NOT NULL,
  `assistant_id` INT NOT NULL,
  `feedingGivenAt` DATETIME NOT NULL,
  `feedingStoredAt` DATETIME NOT NULL,
  `patient_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_feedingLog_feedingType1_idx` (`foodType_id` ASC),
  INDEX `fk_feedingLog_assistant1_idx` (`assistant_id` ASC),
  INDEX `fk_feedingLog_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_feedingLog_foodType1`
    FOREIGN KEY (`foodType_id`)
    REFERENCES `assistanceLogger`.`foodType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_feedingLog_assistant1`
    FOREIGN KEY (`assistant_id`)
    REFERENCES `assistanceLogger`.`assistant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_feedingLog_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `assistanceLogger`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`eventType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`eventType` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(200) NULL,
  `patient_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_eventType_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_eventType_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `assistanceLogger`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`eventLog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`eventLog` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `eventType_id` INT NOT NULL,
  `assistant_id` INT NOT NULL,
  `duration` TIME NULL COMMENT 'Possible time the event took (e.g. training time). ',
  `description` VARCHAR(200) NULL,
  `eventStoredAt` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_eventLog_eventType1_idx` (`eventType_id` ASC),
  INDEX `fk_eventLog_assistant1_idx` (`assistant_id` ASC),
  CONSTRAINT `fk_eventLog_eventType1`
    FOREIGN KEY (`eventType_id`)
    REFERENCES `assistanceLogger`.`eventType` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_eventLog_assistant1`
    FOREIGN KEY (`assistant_id`)
    REFERENCES `assistanceLogger`.`assistant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assistanceLogger`.`patient_has_medicine`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assistanceLogger`.`patient_has_medicine` (
  `patient_id` INT NOT NULL,
  `medicine_id` INT NOT NULL,
  PRIMARY KEY (`patient_id`, `medicine_id`),
  INDEX `fk_patient_has_medicine_medicine1_idx` (`medicine_id` ASC),
  INDEX `fk_patient_has_medicine_patient1_idx` (`patient_id` ASC),
  CONSTRAINT `fk_patient_has_medicine_patient1`
    FOREIGN KEY (`patient_id`)
    REFERENCES `assistanceLogger`.`patient` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_has_medicine_medicine1`
    FOREIGN KEY (`medicine_id`)
    REFERENCES `assistanceLogger`.`medicine` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
